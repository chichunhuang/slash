<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Insect Totem Blog</title>
        <link>https://chichunhuang.github.io/zh-tw/blog</link>
        <description>Insect Totem Blog</description>
        <lastBuildDate>Sat, 09 Dec 2023 09:00:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-tw</language>
        <item>
            <title><![CDATA[Document List (blog)]]></title>
            <link>https://chichunhuang.github.io/zh-tw/blog/docs-map</link>
            <guid>https://chichunhuang.github.io/zh-tw/blog/docs-map</guid>
            <pubDate>Sat, 09 Dec 2023 09:00:01 GMT</pubDate>
            <description><![CDATA[* 昆蟲圖騰重新上架]]></description>
            <content:encoded><![CDATA[<ul><li><a href="/zh-tw/blog/insect-totem-is-coming">昆蟲圖騰重新上架</a></li><li><a href="/zh-tw/blog/insect-totem-release-log">FROM JSPWIKI TO MARKDOWN</a></li><li><a href="/zh-tw/blog/Java-SHA-digester">Java SHA 雜湊 - 以 Java SHA 進行資料雜湊</a></li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[FROM JSPWIKI TO MARKDOWN]]></title>
            <link>https://chichunhuang.github.io/zh-tw/blog/insect-totem-release-log</link>
            <guid>https://chichunhuang.github.io/zh-tw/blog/insect-totem-release-log</guid>
            <pubDate>Sat, 09 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[從前都將筆記做在 portable jspwiki / atlassian conflence，慢慢搬遷到 markdown 來。]]></description>
            <content:encoded><![CDATA[<blockquote><p>從前都將筆記做在 portable jspwiki / atlassian conflence，慢慢搬遷到 markdown 來。
雖然都算是 wiki 語法，但還是不全相同。當初賭錯了，再現轉換有些累人，不知道是否有工具可轉換。</p></blockquote>]]></content:encoded>
            <category>Insect-Totem</category>
        </item>
        <item>
            <title><![CDATA[昆蟲圖騰重新上架]]></title>
            <link>https://chichunhuang.github.io/zh-tw/blog/insect-totem-is-coming</link>
            <guid>https://chichunhuang.github.io/zh-tw/blog/insect-totem-is-coming</guid>
            <pubDate>Sun, 03 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[* 以前註冊的是 www.insect-totem.tw]]></description>
            <content:encoded><![CDATA[<ul><li>以前註冊的是 <a href="http://www.insect-totem.tw" target="_blank" rel="noopener noreferrer">www.insect-totem.tw</a></li><li>現在改註冊 <a href="http://www.insect-totem.net" target="_blank" rel="noopener noreferrer">www.insect-totem.net</a><ul><li>由生物轉生態，再由生態轉行為生態，再到生物電腦模擬。現在在幫忙開發與醫療/醫學/醫研相關的系統。多了些資訊相關筆記所以改 net。</li></ul></li></ul>]]></content:encoded>
            <category>Insect-Totem</category>
        </item>
        <item>
            <title><![CDATA[Java SHA 雜湊]]></title>
            <link>https://chichunhuang.github.io/zh-tw/blog/Java-SHA-digester</link>
            <guid>https://chichunhuang.github.io/zh-tw/blog/Java-SHA-digester</guid>
            <pubDate>Thu, 26 Oct 2023 04:09:23 GMT</pubDate>
            <description><![CDATA[以 Java SHA 進行資料雜湊]]></description>
            <content:encoded><![CDATA[<blockquote><p>SHA 並不算是異種加解密技術，僅能稱為是一種雜湊計算。
將指定資料轉為不可逆的密文，與 MD5 相似。</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="雜湊演算-hash">雜湊演算 (Hash)<a href="#雜湊演算-hash" class="hash-link" aria-label="雜湊演算 (Hash)的直接連結" title="雜湊演算 (Hash)的直接連結">​</a></h2><blockquote><p>又稱為 <strong>散列算法</strong> ,或 <strong>哈希函數</strong> 。
雜湊演算也能將資料轉為密文，但是無法將密文轉回明文。
所以，雜湊演算通常只是用來驗證資料傳遞過程是否遺漏封包。也就是驗證資料完整性(Integrity)時使用。</p><p>ex: MD5、SHA1、HMAC</p></blockquote><ul><li>ShaDigester.java</li></ul><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import java.security.MessageDigest;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">import java.security.NoSuchAlgorithmException;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// SHA: 雜湊演算, 單向將資料轉密文。驗證資料完整性(Integrity)時使用。 </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class ShaDigester {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static final String DIGEST_ALGORITHM_512 = "sha-512";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static final String DIGEST_ALGORITHM_256 = "sha-256";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static String sha512Digest(String message, String salt)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throws NoSuchAlgorithmException {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        MessageDigest md = MessageDigest.getInstance(DIGEST_ALGORITHM_512);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        md.update(String.format("%s%s", message, salt).getBytes());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StringBuffer ret = new StringBuffer();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (byte b : md.digest()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ret.append(String.format("%02x", b));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return ret.toString();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static String sha256Digest(String message, String salt)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            throws NoSuchAlgorithmException {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        MessageDigest md = MessageDigest.getInstance(DIGEST_ALGORITHM_256);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        md.update(String.format("%s%s", message, salt).getBytes());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        StringBuffer ret = new StringBuffer();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        for (byte b : md.digest()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ret.append(String.format("%02x", b));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return ret.toString();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}    </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="複製代碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>sha</category>
            <category>cipher</category>
        </item>
    </channel>
</rss>
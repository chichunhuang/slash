"use strict";(self.webpackChunktool=self.webpackChunktool||[]).push([[5145],{5365:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>p,default:()=>d,frontMatter:()=>c,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"Java/Cypher/Java_Rsa_Cipher","title":"Java RSA \u52a0\u89e3\u5bc6","description":"\u4ee5 Java RSA \u9032\u884c\u8cc7\u6599\u52a0\u89e3\u5bc6","source":"@site/docs/Java/Cypher/Java_Rsa_Cipher.md","sourceDirName":"Java/Cypher","slug":"/Java/Cypher/Java_Rsa_Cipher","permalink":"/docs/Java/Cypher/Java_Rsa_Cipher","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Java RSA \u52a0\u89e3\u5bc6","description":"\u4ee5 Java RSA \u9032\u884c\u8cc7\u6599\u52a0\u89e3\u5bc6","keywords":["rsa","java","cipher","encrypt","decrypt"]},"sidebar":"totem_sidebar","previous":{"title":"Java PBE \u52a0\u89e3\u5bc6","permalink":"/docs/Java/Cypher/Java_Pbe_Cipher"},"next":{"title":"Java SHA \u96dc\u6e4a","permalink":"/docs/Java/Cypher/Java_Sha_Digest"}}');var a=n(4848),i=n(8453);const c={title:"Java RSA \u52a0\u89e3\u5bc6",description:"\u4ee5 Java RSA \u9032\u884c\u8cc7\u6599\u52a0\u89e3\u5bc6",keywords:["rsa","java","cipher","encrypt","decrypt"]},p="RSA \u52a0\u5bc6\u6f14\u7b97",o={},s=[{value:"\u975e\u5c0d\u7a31\u6f14\u7b97\u6cd5\uff1a",id:"\u975e\u5c0d\u7a31\u6f14\u7b97\u6cd5",level:2}];function y(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"rsa-\u52a0\u5bc6\u6f14\u7b97",children:"RSA \u52a0\u5bc6\u6f14\u7b97"})}),"\n",(0,a.jsxs)(r.blockquote,{children:["\n",(0,a.jsx)(r.p,{children:"RSA \u662f\u975e\u5c0d\u7a31\u5f0f\u52a0\u5bc6\u6f14\u7b97\u7684\u4e00\u7a2e\uff0c\u4f7f\u7528\u516c\u9470\u4f9b\u50b3\u9001\u65b9\u52a0\u5bc6\u8cc7\u8a0a\u4f7f\u7528\uff0c\u63a5\u6536\u65b9\u4ee5\u79c1\u9470\u89e3\u9396\u4ee5\u8b80\u53d6\u660e\u6587\u5167\u5bb9\u3002"}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"\u975e\u5c0d\u7a31\u6f14\u7b97\u6cd5",children:"\u975e\u5c0d\u7a31\u6f14\u7b97\u6cd5\uff1a"}),"\n",(0,a.jsxs)(r.blockquote,{children:["\n",(0,a.jsxs)(r.p,{children:["\u975e\u5c0d\u7a31\u5f0f\u52a0\u5bc6\u5c31\u662f\u52a0\u5bc6\u548c\u89e3\u5bc6\u6240\u4f7f\u7528\u7684\u5bc6\u9470\u4e0d\u540c\uff0c\u4e00\u822c\u7a31 ",(0,a.jsx)(r.strong,{children:"\u516c\u9470"})," \u548c ",(0,a.jsx)(r.strong,{children:"\u79c1\u9470"})," \u3002\r\n\u516c\u79c1\u9470\u5fc5\u9700\u914d\u5c0d\u4f7f\u7528\uff0c\u5426\u5247\u4e0d\u80fd\u6253\u958b\u52a0\u5bc6\u6587\u4ef6\u3002"]}),"\n",(0,a.jsx)(r.p,{children:"\u8a0a\u606f\u63a5\u6536\u65b9\u5148\u88fd\u5099\u516c\u9470\u8207\u79c1\u9470\u3002\u4e26\u5c07\u516c\u9470\u767c\u9001\u7d66\u8cc7\u6599\u4f86\u6e90\u65b9\u3002\r\n\u8cc7\u6599\u6e90\u982d\u5247\u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u9470\u5c07\u8a0a\u606f\u52a0\u5bc6\uff0c\u7136\u5f8c\u5c07\u7955\u6587\u56de\u50b3\u7d66\u63a5\u6536\u65b9\uff0c\u63a5\u6536\u65b9\u518d\u4f9d\u64da\u81ea\u5df1\u898f\u5247\u7d50\u5408\u516c\u79c1\u9470\u9032\u884c\u89e3\u5bc6\u3002"}),"\n",(0,a.jsxs)(r.p,{children:["\u6240\u4ee5\uff0c\u539f\u5247\u4e0a\u662f ",(0,a.jsx)(r.strong,{children:"\u63a5\u6536"})," \u8a0a\u606f\u7684\u4eba\u4f86 ",(0,a.jsx)(r.strong,{children:"\u6c7a\u5b9a\u6f14\u7b97"})," \u5de5\u5177\u548c ",(0,a.jsx)(r.strong,{children:"\u6d3e\u767c\u91d1\u9470"})," \u3002"]}),"\n",(0,a.jsx)(r.p,{children:"ex: RSA\u3001DSA\u3001ECC"}),"\n"]}),"\n",(0,a.jsx)(r.h1,{id:"java-rsa-\u7bc4\u4f8b",children:"Java RSA \u7bc4\u4f8b"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:'import java.security.InvalidKeyException;\r\nimport java.security.KeyFactory;\r\nimport java.security.KeyPair;\r\nimport java.security.KeyPairGenerator;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.security.spec.InvalidKeySpecException;\r\nimport java.security.spec.PKCS8EncodedKeySpec;\r\nimport java.security.spec.X509EncodedKeySpec;\r\nimport java.util.Arrays;\r\n\r\nimport javax.crypto.BadPaddingException;\r\nimport javax.crypto.Cipher;\r\nimport javax.crypto.IllegalBlockSizeException;\r\nimport javax.crypto.NoSuchPaddingException;\r\n\r\nimport util.EncryptDecryptException;\r\n\r\n//\u975e\u5c0d\u7a31\u5f0f\u52a0\u5bc6\u5c31\u662f\u52a0\u5bc6\u548c\u89e3\u5bc6\u6240\u4f7f\u7528\u5bc6\u9470\u4e0d\u540c\uff0c\u4e00\u822c\u7a31 __\u516c\u9470__ \u548c __\u79c1\u9470__ \u3002\r\npublic class RsaCipher {\r\n\r\n    public static void main(String[] args) {\r\n\r\n        try {\r\n            byte[] data = new byte[] { 1, 3, 5, 7, 9, 11, 13, 17, 31 };\r\n\r\n            KeyPair keyPair = RsaCipher.generateRsaKeyPair(2048);\r\n            byte[] publicKey = keyPair.getPublic().getEncoded();\r\n            byte[] privateKey = keyPair.getPrivate().getEncoded();\r\n\r\n            byte[] encrypted = RsaCipher.rasEncryptByPublicKey(data,\r\n                    publicKey);\r\n\r\n            byte[] descrypted = RsaCipher.rsaDecryptByPrivateKey(encrypted,\r\n                    privateKey);\r\n\r\n            System.out.println(Arrays.equals(data, descrypted));\r\n\r\n        } catch (NoSuchAlgorithmException | EncryptDecryptException e) {\r\n            e.printStackTrace();\r\n            throw new RuntimeException(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public static KeyPair generateRsaKeyPair(int length)\r\n            throws NoSuchAlgorithmException {\r\n        KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA");\r\n        keyGen.initialize(length);\r\n\r\n        return keyGen.generateKeyPair();\r\n    }\r\n\r\n    private static Cipher createRsaPrivateKeyCipher(byte[] secretKey)\r\n            throws NoSuchAlgorithmException, NoSuchPaddingException,\r\n            InvalidKeyException, InvalidKeySpecException {\r\n        Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");\r\n        cipher.init(Cipher.DECRYPT_MODE, KeyFactory.getInstance("RSA")\r\n                .generatePrivate(new PKCS8EncodedKeySpec(secretKey)));\r\n        return cipher;\r\n    }\r\n\r\n    private static Cipher createRsaPublicKeyCipher(byte[] publicKey)\r\n            throws NoSuchAlgorithmException, NoSuchPaddingException,\r\n            InvalidKeyException, InvalidKeySpecException {\r\n        Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");\r\n        cipher.init(Cipher.ENCRYPT_MODE, KeyFactory.getInstance("RSA")\r\n                .generatePublic(new X509EncodedKeySpec(publicKey)));\r\n        return cipher;\r\n    }\r\n\r\n    public static byte[] rasEncryptByPublicKey(byte[] data, byte[] publicKey)\r\n            throws EncryptDecryptException {\r\n        if (null == data || data.length == 0) return new byte[] {};\r\n\r\n        try {\r\n            Cipher cipher = createRsaPublicKeyCipher(publicKey);\r\n            byte[] ret = cipher.doFinal(data);\r\n            return ret;\r\n        } catch (InvalidKeyException | NoSuchAlgorithmException\r\n                | NoSuchPaddingException | InvalidKeySpecException\r\n                | IllegalBlockSizeException | BadPaddingException e) {\r\n            e.printStackTrace();\r\n            throw new EncryptDecryptException("unexpected", e);\r\n        }\r\n    }\r\n\r\n    public static byte[] rsaDecryptByPrivateKey(byte[] data, byte[] privateKey)\r\n            throws EncryptDecryptException {\r\n        if (null == data || data.length == 0) return new byte[] {};\r\n\r\n        try {\r\n            Cipher cipher = createRsaPrivateKeyCipher(privateKey);\r\n            byte[] ret = cipher.doFinal(data);\r\n            return ret;\r\n        } catch (InvalidKeyException | NoSuchAlgorithmException\r\n                | NoSuchPaddingException | InvalidKeySpecException\r\n                | IllegalBlockSizeException | BadPaddingException e) {\r\n            e.printStackTrace();\r\n            throw new RuntimeException("unexpected", e);\r\n        }\r\n    }\r\n\r\n    public static boolean isKeyPair(byte[] publicKey, byte[] secretKey) {\r\n        String data = "fake-data";\r\n\r\n        byte[] actual;\r\n\r\n        try {\r\n            actual = RsaCipher.rasEncryptByPublicKey(data.getBytes("utf8"),\r\n                    publicKey);\r\n            RsaCipher.rsaDecryptByPrivateKey(actual, secretKey);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\n'})})]})}function d(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(y,{...e})}):y(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>p});var t=n(6540);const a={},i=t.createContext(a);function c(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function p(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);
"use strict";(globalThis.webpackChunkinsect_totem=globalThis.webpackChunkinsect_totem||[]).push([[1561],{28453:(n,e,i)=>{i.d(e,{R:()=>c,x:()=>s});var l=i(96540);const r={},t=l.createContext(r);function c(n){const e=l.useContext(t);return l.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),l.createElement(t.Provider,{value:e},n.children)}},45730:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"Scala/Scala_Implicit_Class","title":"Scala \u96b1\u5f0f\u985e","description":"Scala Implicit Class","source":"@site/docs/145_Scala/080_Scala_Implicit_Class.md","sourceDirName":"145_Scala","slug":"/Scala/Scala_Implicit_Class","permalink":"/docs/Scala/Scala_Implicit_Class","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":80,"frontMatter":{"title":"Scala \u96b1\u5f0f\u985e","description":"Scala Implicit Class","keywords":["Scala","ImplicitClass"]},"sidebar":"totem_sidebar","previous":{"title":"Scala \u628a Function \u7576\u53c3\u6578\u7684 Function","permalink":"/docs/Scala/Scala_High_Order_Function"},"next":{"title":"Scala \u6578\u503c\u76f8\u95dc\u8655\u7406","permalink":"/docs/Scala/Scala_Numeric_Operation"}}');var r=i(74848),t=i(28453);const c={title:"Scala \u96b1\u5f0f\u985e",description:"Scala Implicit Class",keywords:["Scala","ImplicitClass"]},s=void 0,a={},o=[{value:"\u96b1\u5f0f\u985e: Implicit Class",id:"\u96b1\u5f0f\u985e-implicit-class",level:2},{value:"\u4f7f\u7528\u9650\u5236\u689d\u4ef6",id:"\u4f7f\u7528\u9650\u5236\u689d\u4ef6",level:2},{value:"\u4f7f\u7528\u60c5\u5883",id:"\u4f7f\u7528\u60c5\u5883",level:2}];function d(n){const e={code:"code",h2:"h2",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"\u96b1\u5f0f\u985e-implicit-class",children:"\u96b1\u5f0f\u985e: Implicit Class"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u95dc\u9375\u5b57 implicit \u5ba3\u544a\u5728\u95dc\u9375\u5b57 class \u4e4b\u524d"}),"\n",(0,r.jsx)(e.li,{children:"\u6709\u4f5c\u7528\u57df\u7684\u9650\u5236"}),"\n",(0,r.jsx)(e.li,{children:"\u4e00\u500b implicit class \u53ef\u4ee5\u6709\u591a\u500b Util methods"}),"\n",(0,r.jsx)(e.li,{children:"\u4e0d\u4e00\u5b9a\u8981 return \u8207\u8f38\u5165\u76f8\u540c\u7684\u578b\u5225"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u4f7f\u7528\u9650\u5236\u689d\u4ef6",children:"\u4f7f\u7528\u9650\u5236\u689d\u4ef6"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u53ea\u80fd\u4f7f\u7528\u5728\u5176\u4ed6 trait/class/objcet/package object \u5167\u90e8 (\u9650\u5b9a\u4f5c\u7528\u57df\u7bc4\u570d)"}),"\n",(0,r.jsxs)(e.li,{children:["\u9700\u8981 ",(0,r.jsx)("code",{children:(0,r.jsx)(e.strong,{children:"import implicit class"})})," \u6240\u5c6c\u7684\u4e0a\u5c64\u7d50\u69cb(container)"]}),"\n",(0,r.jsxs)(e.li,{children:["\u4f5c\u7528\u57df\u5167\u4e0d\u80fd\u51fa\u73fe\u8207\u96b1\u5f0f\u985e ",(0,r.jsx)("code",{children:(0,r.jsx)(e.strong,{children:"\u540c\u540d\u8b8a\u6578"})})," (\u65b9\u6cd5,\u6210\u54e1,Object, case class)"]}),"\n",(0,r.jsxs)(e.li,{children:["constructor \u4e2d\u53ea\u6709\u4e00\u500b ",(0,r.jsx)("code",{children:(0,r.jsx)(e.strong,{children:"\u975e\u96b1\u5f0f\u7684\u53c3\u6578"})}),", (\u4f46\u53ef\u4ee5\u8207 curry \u4e26\u7528)"]}),"\n",(0,r.jsx)(e.li,{children:"method \u5247\u53ef\u4ee5\u6709\u591a\u500b \u53c3\u6578"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u4f7f\u7528\u60c5\u5883",children:"\u4f7f\u7528\u60c5\u5883"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u8b93 class \u53ef\u4ee5\u81ea\u52d5\u578b\u5225\u8f49\u63db. \u770b\u8d77\u4f86\u985e\u4f3c\u539f class \u7684\u80fd\u529b(behavior)\u589e\u5f37."}),"\n",(0,r.jsxs)(e.li,{children:["\u7bc4\u4f8b\u4e2d DoubleUtil \u8b93 double \u591a\u4e86\u4e00\u500b ",(0,r.jsx)("code",{children:(0,r.jsx)(e.strong,{children:"~="})})," \u65b9\u6cd5."]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'\r\n    // \u611f\u89ba\u4e0a, implicit class \u5c31\u662f Scala \u80cc\u5f8c\u5e6b\u4f60\u751f\u51fa UtilClass, \u6240\u4ee5\u9700\u8981 import\r\n    // \u4f7f\u7528\u9650\u5236: \u4f5c\u7528\u57df (object) \r\n    package com.alvinalexander.utils\r\n    object StringUtils {\r\n       implicit class StringImprovements(val s: String) {\r\n          def increment: String = s.map(c => (c + 1).toChar)\r\n          def decrement: String = s.map(c => (c - 1).toChar)\r\n          def hideAll: String = s.replaceAll(".", "*")\r\n          def plusOne: Int = s.toInt + 1\r\n       }\r\n    }\r\n    \r\n    // import \u5f8c\u53ef\u4f7f\u7528\r\n    import com.alvinalexander.utils.StringUtils._\r\n    object Main extends App {\r\n       println("HAL".increment)\r\n    }\r\n \r\n    // \u4f7f\u7528\u9650\u5236: \u4f5c\u7528\u57df (package object) \r\n    package com.alvinalexander\r\n    package object utils {\r\n       implicit class StringImprovements(val s: String) {\r\n          def increment = s.map(c => (c + 1).toChar)\r\n       }\r\n    }\r\n    \r\n    //\u4f7f\u7528\r\n    import com.alvinalexander.utils._\r\n    object Main extends App {\r\n       println("HAL".increment)\r\n    }\r\n \r\n    \r\n    implicit class RichDouble(x: Double) //  JVM global \u662f\u4e0d\u5141\u8a31\u7684\r\n \r\n    // \u4f7f\u7528\u9650\u5236: \u55ae\u4e00\u975e\u96b1\u5f0f\u985e\u5efa\u69cb\u53c3\u6578\r\n    implicit class RichDate(date: java.util.Date) // OK\r\n    implicit class Indexer[T](collecton: Seq[T], index: Int) // Error, \u5169\u500b\u53c3\u6578\r\n    implicit class Indexer[T](collecton: Seq[T])(implicit index: Index) // OK, \u4e00\u6b21\u4e00\u500b\r\n \r\n \r\n    // \u81ea\u5275\u4e00\u500b\u65b0\u7684\u6d6e\u9ede\u6578\u6bd4\u8f03\u5b50\r\n       object DoubleUtil {\r\n         implicit class DoubleImprovements(val lead: Double) {\r\n           def ~=(another: Double) = {\r\n             val precision: Double = 0.000000000000000001\r\n             if ((lead - another).abs < precision) true else false\r\n           }\r\n         }\r\n       }\r\n       \r\n       import DoubleUtil._\r\n       val a = 0.3\r\n       val b = 0.1 + 0.2\r\n       \r\n       if (a ~= b) {\r\n         print("Equals")\r\n       } else {\r\n         print("Not Equals")\r\n       }     \n'})})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}}}]);
"use strict";(self.webpackChunkinsect_totem=self.webpackChunkinsect_totem||[]).push([[312],{2592:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"Java/Spring/Spring_Restful","title":"Spring Restful API \u7df4\u7fd2","description":"Spring Restful API \u7df4\u7fd2","source":"@site/docs/110_Java/30_Spring/Spring_Restful.md","sourceDirName":"110_Java/30_Spring","slug":"/Java/Spring/Spring_Restful","permalink":"/docs/Java/Spring/Spring_Restful","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Spring Restful API \u7df4\u7fd2","description":"Spring Restful API \u7df4\u7fd2","keywords":["Spring","Restful"]},"sidebar":"totem_sidebar","previous":{"title":"Spring Restful API \u53d6\u503c\u7df4\u7fd2","permalink":"/docs/Java/Spring/Spring_Remoting_Web_Service"},"next":{"title":"Spring Wicket Restful","permalink":"/docs/Java/Spring/Spring_Wicket_Restful"}}');var s=r(74848),i=r(28453);const a={title:"Spring Restful API \u7df4\u7fd2",description:"Spring Restful API \u7df4\u7fd2",keywords:["Spring","Restful"]},l=void 0,o={},p=[{value:"Dependency",id:"dependency",level:2},{value:"Container \u8a2d\u5b9a",id:"container-\u8a2d\u5b9a",level:2},{value:"Controller \u8a2d\u5b9a",id:"controller-\u8a2d\u5b9a",level:2},{value:"Controller \u985e\u5225\u7bc4\u4f8b",id:"controller-\u985e\u5225\u7bc4\u4f8b",level:2},{value:"Entity",id:"entity",level:2},{value:"Invoke",id:"invoke",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"\u5728 Spring Framework \u70ba\u5e95\u7684 Web \u5c08\u6848\u4e0b\uff0c\u589e\u52a0 Restful API \u670d\u52d9"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"./Spring_Wicket_Restful",children:"Spring Wicket Restful API \u6574\u4f75\u7df4\u7fd2"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"./Spring_Remoting_Web_Service",children:"Spring Restful API \u53d6\u503c\u7df4\u7fd2"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"dependency",children:"Dependency"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"jackson-core-asl-1.7.4.jar"}),"\n",(0,s.jsx)(n.li,{children:"jackson-mapper-asl-1.7.4.jar"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"container-\u8a2d\u5b9a",children:"Container \u8a2d\u5b9a"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"servlet \u8a2d\u5b9a\u8cc7\u6e90\u7684 Base URI"}),"\n",(0,s.jsx)(n.li,{children:"resource: /restful/*"}),"\n",(0,s.jsx)(n.li,{children:"rest-servlet.xml"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"web.xml"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"    <servlet-mapping>\r\n            <servlet-name>rest</servlet-name>\r\n            <url-pattern>/restful/*</url-pattern>\r\n    </servlet-mapping>\r\n      \r\n     <servlet>\r\n        <servlet-name>rest</servlet-name>\r\n        <servlet-class>\r\n            org.springframework.web.servlet.DispatcherServlet\r\n        </servlet-class>\r\n        <init-param>\r\n            <param-name>contextConfigLocation</param-name>\r\n            <param-value>\r\n                WEB-INF/classes/rest-servlet.xml\r\n            </param-value>\r\n        </init-param>\r\n        <load-on-startup>3</load-on-startup>\r\n    </servlet>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"controller-\u8a2d\u5b9a",children:"Controller \u8a2d\u5b9a"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Spring framework : scan restful \u76f8\u95dc annotations"}),"\n",(0,s.jsx)(n.li,{children:"\u6c7a\u5b9a\u63a1\u7528 json \u683c\u5f0f\u7684\u76f8\u95dc\u8f49\u63db\u8a2d\u5b9a"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"rest-servlet.xml"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'    <?xml version="1.0" encoding="UTF-8"?>\r\n    <beans xmlns="http://www.springframework.org/schema/beans"\r\n     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"\r\n     xsi:schemaLocation="\r\n     http://www.springframework.org/schema/beans\r\n     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\r\n     http://www.springframework.org/schema/context\r\n     http://www.springframework.org/schema/context/spring-context-3.0.xsd\r\n     http://www.springframework.org/schema/mvc\r\n     http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">\r\n     \r\n         <context:component-scan base-package="insect.totem.restful" />\r\n      \r\n         \x3c!-- To enable @RequestMapping process on type level and method level --\x3e\r\n         <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />\r\n          \r\n         <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">\r\n             <property name="messageConverters">\r\n             <list>\r\n                <ref bean="jsonConverter" />\r\n             </list>\r\n             </property>\r\n         </bean>\r\n          \r\n         \x3c!-- use MappingJacksonHttpMessageConverter to do Serialization/Deserialization of JSON --\x3e\r\n         <bean id="jsonConverter"\r\n         class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">\r\n            <property name="supportedMediaTypes" value="application/json" />\r\n         </bean>\r\n      \r\n    </beans>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"controller-\u985e\u5225\u7bc4\u4f8b",children:"Controller \u985e\u5225\u7bc4\u4f8b"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u8cc7\u6e90\u8def\u5f91\u7684\u670d\u52d9\u5be6\u969b\u5be6\u4f5c\u4f4d\u7f6e"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'\r\n    package insect.totem.restful.controller;\r\n    import insect.totem.restful.Employee;\r\n    import org.springframework.stereotype.Controller;\r\n    import org.springframework.web.bind.annotation.RequestMapping;\r\n    import org.springframework.web.bind.annotation.RequestMethod;\r\n    import org.springframework.web.bind.annotation.ResponseBody;\r\n\r\n    @Controller\r\n    @RequestMapping("/members")\r\n    public class EmployeeRestController {\r\n        @RequestMapping(value = "/totem", method = RequestMethod.GET)\r\n        @ResponseBody\r\n        public Employee get() {\r\n            Employee empOne = new Employee(1, "Totem", "totem@dummy.org");\r\n            System.out.println("test1");\r\n            return empOne;\r\n        }\r\n        @RequestMapping(value = "/insect", method = RequestMethod.GET)\r\n        @ResponseBody\r\n        public Employee get2() {\r\n            Employee empOne = new Employee(12, "Insect", "insect@dummy.org");\r\n            return empOne;\r\n        }\r\n    }\r\n\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u8a3b:\r\nweb.xml \u6709\u52a0\u4e00\u500b filter\uff0c\u505a\u6b0a\u9650\u63a7\u7ba1"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'\r\n    import java.security.Principal;\r\n    \r\n    import org.springframework.beans.factory.annotation.Autowired;\r\n    import org.springframework.security.access.prepost.PreAuthorize;\r\n    import org.springframework.web.bind.annotation.*;\r\n    \r\n    import insect.totem.specimen.service.LabelService;\r\n    import insect.totem.vo.wrapper.ResponseData;\r\n    import insect.totem.vo.Label;\r\n    \r\n    @CrossOrigin\r\n    @RequestMapping("/specimen/label")\r\n    @RestController\r\n    public class LabelController {\r\n        \r\n        private static final Logger log = LoggerFactory.getLogger(LabelController.class);\r\n    \r\n        @Autowired\r\n        private LabelService labelService;\r\n    \r\n        @PreAuthorize("hasAnyRole(\'ROLE_SPECIMEN_LABEL_QUERY\')")\r\n        @GetMapping(value = "/{orderId}/findLabel")\r\n        public ResponseData<Label> findSerialNoData(Principal principal,\r\n                @PathVariable("orderId") String orderId) throws Exception {\r\n            \r\n            return labelService.find();\r\n        }\r\n    \r\n        @PreAuthorize("hasAnyRole(\'ROLE_SPECIMEN_LABEL_INSERT\')")\r\n        @PostMapping(value = "/{orderId}/insertLabels")\r\n        public ResponseData<Label> generateLabels(Principal principal,\r\n                @PathVariable("orderId") String orderId, @RequestBody @Valid LabelBean LabelBean) throws Exception {\r\n    \r\n            return labelService.insert();\r\n        }\r\n\r\n        @PreAuthorize("hasAnyRole(\'ROLE_specimen_LABEL_REMOVE\')")\r\n        @DeleteMapping(value = "/{orderId}/deleteLabels")\r\n        public ResponseData<Result> deleteLabels(Principal principal,\r\n                @PathVariable("orderId") String orderId) throws Exception {\r\n    \r\n            return labelService.delete();\r\n        }\r\n    }\n'})}),"\n",(0,s.jsx)(n.h2,{id:"entity",children:"Entity"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'    package insect.totem.restful;\r\n    public class Employee {\r\n        private long id;\r\n        private String name;\r\n        private String email;\r\n        public Employee() {}\r\n        public Employee(long id, String name, String email) {\r\n            this.id = id;\r\n            this.name = name;\r\n            this.email = email;\r\n        }\r\n\r\n        @Override\r\n        public String toString() {\r\n            return "Employee [id=" + id + ", name=" + name\r\n                    + ", email=" + email + "]";\r\n        }\r\n        \r\n        getters/setters...\r\n    }\n'})}),"\n",(0,s.jsx)(n.h2,{id:"invoke",children:"Invoke"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'\r\n    public class GetJsonTest {\r\n        public static void main(String args[]) {\r\n            RestTemplate restTemplate = new RestTemplate();\r\n            Employee person = restTemplate.getForObject(\r\n                    "http://localhost:8080/appName/restful/members/totem", Employee.class);\r\n            System.out.println("ID: " + person.getId());\r\n            System.out.println("Name: " + person.getName());\r\n            System.out.println("Email: " + person.getEmail());\r\n        }\r\n    }\n'})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var t=r(96540);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);